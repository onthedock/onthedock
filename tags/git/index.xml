<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>git on On The Dock</title>
    <link>https://onthedock.github.io/tags/git/</link>
    <description>Recent content in git on On The Dock</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Handmade with &amp;#9829; by Xavi Aznar</copyright>
    <lastBuildDate>Tue, 12 May 2020 22:06:13 +0200</lastBuildDate>
    
	<atom:link href="https://onthedock.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Múltiples repositorios remotos en Git</title>
      <link>https://onthedock.github.io/post/200512-multiples-repositorios-remotos-en-git/</link>
      <pubDate>Tue, 12 May 2020 22:06:13 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/200512-multiples-repositorios-remotos-en-git/</guid>
      <description>&lt;p&gt;Al clonar un repositorio, Git añade una referencia en la configuración del repositorio clonado para incluir el repositorio &amp;ldquo;original&amp;rdquo; como &amp;ldquo;remote&amp;rdquo;. Este repositorio se denomina, por defecto, &lt;code&gt;origin&lt;/code&gt;. De esta forma, si quieres enviar cambios a este repositorio, ejecutas el comando &lt;code&gt;git push origin ${rama}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;En algunas situaciones te puede interesar trabajar con múltiples repositorios remotos, por lo que en esta entrada explico cómo revisar los repositorios remotos configurados en tu repositorio, cómo añadir y eliminar repositorios &amp;ldquo;remotos&amp;rdquo; adicionales, cambiarles el nombre, etc.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gestionar múltiples identidades en Git</title>
      <link>https://onthedock.github.io/post/200509-gestionar-multiples-identidades-en-git/</link>
      <pubDate>Sat, 09 May 2020 18:46:35 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/200509-gestionar-multiples-identidades-en-git/</guid>
      <description>&lt;p&gt;He encontrado este artículo &lt;a href=&#34;https://www.sep.com/sep-blog/2019/01/03/automatically-keeping-git-identities-distinct-between-accounts/&#34;&gt;Automatically keeping Git identities distinct between accounts&lt;/a&gt; hojeando el blog de la empresa &lt;a href=&#34;https://www.sep.com/&#34;&gt;SEP&lt;/a&gt; después de leer un artículo sobre &lt;em&gt;testing&lt;/em&gt; de plantillas de CloudFormation.&lt;/p&gt;

&lt;p&gt;La configuración que indica Aaron Alexander en el artículo referenciado permite usar una identidad concreta para cada cuenta de Git.&lt;/p&gt;

&lt;p&gt;Esto te permite identificarte con tu cuenta de empresa en los repositorios de la empresa, en los personales con una dirección de correo personal, etc.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gitea: la versión mejorada de Gogs</title>
      <link>https://onthedock.github.io/post/180713-gitea-la-version-mejorada-de-gogs/</link>
      <pubDate>Fri, 13 Jul 2018 20:04:36 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/180713-gitea-la-version-mejorada-de-gogs/</guid>
      <description>&lt;p&gt;Gogs es un servidor web de repositorios Git (a lo GitHub). He hablado otras veces de lo sencillo que es montarlo usando Docker, de manera independiente (&lt;a href=&#34;https://onthedock.github.io/post/171106-gogs-como-crear-tu-propio-servicio-de-hospedaje-de-repos-git/&#34;&gt;usando SQLite&lt;/a&gt; como base de datos o &lt;a href=&#34;https://onthedock.github.io/post/180520-pipeline-gogs-el-repositorio-de-codigo/&#34;&gt;con MySQL&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;A través de este artículo &lt;a href=&#34;https://www.cyberciti.biz/open-source/github-alternatives-open-source-seflt-hosted/&#34;&gt;6 Github alternatives that are open source and self-hosted&lt;/a&gt; descubrí hace unos días &lt;a href=&#34;https://gitea.io&#34;&gt;Gitea&lt;/a&gt; y a continuación te explico porqué creo que es todavía mejor que Gogs.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gogs - Cómo crear tu propio servicio de hospedaje de repositorios Git</title>
      <link>https://onthedock.github.io/post/171106-gogs-como-crear-tu-propio-servicio-de-hospedaje-de-repos-git/</link>
      <pubDate>Mon, 06 Nov 2017 22:11:26 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/171106-gogs-como-crear-tu-propio-servicio-de-hospedaje-de-repos-git/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://gogs.io/&#34;&gt;Gogs&lt;/a&gt; es la manera más sencilla, rápida y menos dolorosa de poner en marcha tu propio servicio de Git en tu infraestructura, tu propio &lt;em&gt;Github&lt;/em&gt;, para entendernos. Gogs proporciona un entorno web que permite gestionar los respositorios Git desde el navegador, el acceso que tienen los usuarios, gestionar &lt;em&gt;issues&lt;/em&gt; y &lt;em&gt;pull requests&lt;/em&gt; e incluso crear un wiki para documentar el proyecto.&lt;/p&gt;

&lt;p&gt;Es 100% código abierto, está escrito en Go y es &lt;em&gt;muy ligero&lt;/em&gt; (incluso puede correr en una Raspberry Pi).&lt;/p&gt;

&lt;p&gt;En este artículo te indico cómo confirgurarlo lanzándolo desde un contenedor sobre Docker.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Normas para estructurar ficheros implicados en la creación de contenedores</title>
      <link>https://onthedock.github.io/post/170520-normas-para-estructurar-ficheros-implicados-en-la-creacion-de-contenedores/</link>
      <pubDate>Sat, 20 May 2017 19:59:44 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170520-normas-para-estructurar-ficheros-implicados-en-la-creacion-de-contenedores/</guid>
      <description>&lt;p&gt;El proceso desde la creación a la ejecución del contenedor se puede separar en varias fases:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Creación de la imagen (mediante la redacción de un fichero &lt;code&gt;Dockerfile&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Construcción de la imagen&lt;/li&gt;
&lt;li&gt;Ejecución del contenedores&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Para tener los diferentes ficheros implicados en el proceso organizados de forma homogénea, me he autoimpuesto las siguientes reglas a la hora de estructurar los repositorios.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>