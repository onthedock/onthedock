<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dev on On The Dock</title>
    <link>https://onthedock.github.io/categories/dev/</link>
    <description>Recent content in Dev on On The Dock</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Handmade with &amp;#9829; by Xavi Aznar</copyright>
    <lastBuildDate>Sun, 14 Jan 2018 21:11:00 +0100</lastBuildDate>
    
	<atom:link href="https://onthedock.github.io/categories/dev/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Instalando Docker-CE usando Vagrant shell provisioning</title>
      <link>https://onthedock.github.io/post/180114-instalando-docker-ce-usando-vagrant-shell-provisioning/</link>
      <pubDate>Sun, 14 Jan 2018 21:11:00 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/180114-instalando-docker-ce-usando-vagrant-shell-provisioning/</guid>
      <description>&lt;p&gt;A raíz de las pruebas realizadas en la &lt;a href=&#34;https://onthedock.github.io/post/180114-vagrant-segunda-oportunidad/&#34;&gt;segunda toma de contacto&lt;/a&gt; con &lt;a href=&#34;https://onthedock.github.io/tags/vagrant/&#34;&gt;Vagrant&lt;/a&gt;, he creado un script para instalar Docker-CE como &lt;strong&gt;prueba de concepto&lt;/strong&gt; de &lt;em&gt;shell provisioning&lt;/em&gt; sobre Vagrant.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;En vez de instalar una y otra vez Docker desde los repositorios, es mucho más eficiente crear una &lt;a href=&#34;https://www.vagrantup.com/docs/boxes/base.html&#34;&gt;&lt;em&gt;box&lt;/em&gt; personalizada&lt;/a&gt; con el software que necesitamos.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Vagrant: Segunda oportunidad (y mejores sensaciones que la primera vez)</title>
      <link>https://onthedock.github.io/post/180114-vagrant-segunda-oportunidad/</link>
      <pubDate>Sun, 14 Jan 2018 17:28:40 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/180114-vagrant-segunda-oportunidad/</guid>
      <description>&lt;p&gt;Después de una &lt;a href=&#34;https://onthedock.github.io/post/170521-vagrant-primeras-impresiones/&#34;&gt;primera toma de contacto&lt;/a&gt; con sabor agridulce, estos días festivos he dedicado algo más de tiempo a dar una segunda oportunidad a Vagrant.&lt;/p&gt;

&lt;p&gt;En este artículo recojo mis impresiones en esta nueva toma de contacto.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ignorar el DNS asignado por el servidor DHCP</title>
      <link>https://onthedock.github.io/post/171208-ignorar-el-dns-asignado-por-el-servidor-dhcp/</link>
      <pubDate>Fri, 08 Dec 2017 08:39:09 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/171208-ignorar-el-dns-asignado-por-el-servidor-dhcp/</guid>
      <description>&lt;p&gt;Después de instalar y configurar &lt;code&gt;dnsmasq&lt;/code&gt;, quiero hacer que éste sea el DNS usado por defecto. Como el servidor DHCP proporciona, además de la IP los servidores DNS, las máquinas virtuales en el equipo de laboratorio no son capaces de resolver los nombres del resto de máquinas del definidos en &lt;code&gt;dnsmasq&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dime qué opinas</title>
      <link>https://onthedock.github.io/post/171206-dime-que-opinas/</link>
      <pubDate>Wed, 06 Dec 2017 08:22:03 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/171206-dime-que-opinas/</guid>
      <description>El objetivo del blog es ir anotando los problemas -y las soluciones- que encuentro relacionados con la aventura de aprender sobre el mundillo de los contenedores. Nuestro escenario particular es único, pero casi siempre los problemas que encontramos ya los ha solucionado antes alguien que sabe mucho más que nosotros. Encontrar la solución correcta, o la que se ajusta a nuestro caso es complicado. A veces la solución encontrada sirve para poder tirar un poco más del hilo y obtener más información sobre la causa del problema&amp;hellip;</description>
    </item>
    
    <item>
      <title>Crea un registro local para tus imágenes</title>
      <link>https://onthedock.github.io/post/171202-crea-un-registro-local-para-tus-imagenes/</link>
      <pubDate>Sat, 02 Dec 2017 13:48:17 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/171202-crea-un-registro-local-para-tus-imagenes/</guid>
      <description>&lt;p&gt;El registro por defecto donde almacenar y compartir las imágenes Docker es &lt;a href=&#34;https://hub.docker.com&#34;&gt;Docker Hub&lt;/a&gt;. Desde un punto de vista empresarial, descargar imágenes desde un registro público supone un riesgo de seguridad.&lt;/p&gt;

&lt;p&gt;En esta entrada indico cómo lanzar el registro oficial de Docker en nuestra infraestructura. Una vez en marcha, veremos cómo almacenar las imágenes en el registro local y cómo lanzar contenedores usando las imágenes desde nuestro registro.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Usando contenedores como herramienta de desarrollo</title>
      <link>https://onthedock.github.io/post/171126-usando-contenedores-como-herramienta-de-desarrollo/</link>
      <pubDate>Sun, 26 Nov 2017 13:06:48 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/171126-usando-contenedores-como-herramienta-de-desarrollo/</guid>
      <description>&lt;p&gt;Una de las soluciones para el problema de proporcionar entornos de desarrollo a proveedores externos (colaborando en el desarrollo de aplicaciones) es proporcionar una máquina virtual pre-configurada con las herramientas aprobadas por la empresa.&lt;/p&gt;

&lt;p&gt;Al usar contenedores se pueden solventar algunos de los problemas que presenta la solución basada en máquinas virtuales.&lt;/p&gt;

&lt;p&gt;En esta entrada se tratan algunas de las ventajas que se derivan del uso de contenedores como parte del &lt;em&gt;toolchain&lt;/em&gt; del desarrollo de aplicaciones. Las problemáticas que resuelve el uso de contenedores son comunes a la mayoría de lenguajes de programación (tanto interpretados como compilados).&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gogs No Arranca en la Raspberry Pi después de la configuración inicial</title>
      <link>https://onthedock.github.io/post/171118-gogs-no-arranca-en-rpi/</link>
      <pubDate>Sat, 18 Nov 2017 22:34:59 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/171118-gogs-no-arranca-en-rpi/</guid>
      <description>&lt;p&gt;En la entrada &lt;a href=&#34;https://onthedock.github.io/post/171106-gogs-como-crear-tu-propio-servicio-de-hospedaje-de-repos-git/&#34;&gt;Gogs - Cómo crear tu propio servicio de hospedaje de repositorios Git&lt;/a&gt; describía cómo montar un servicio como GitHub usando Gogs.&lt;/p&gt;

&lt;p&gt;Hoy he intentado montar lo mismo sobre la Raspberry Pi aprovechando que Gogs ofrece una imagen específica: &lt;a href=&#34;https://hub.docker.com/r/gogs/gogs-rpi/&#34;&gt;gogs/gogs-rpi&lt;/a&gt;,
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Single node cluster en la RPi3</title>
      <link>https://onthedock.github.io/post/171111-snc-en-rpi3/</link>
      <pubDate>Sat, 11 Nov 2017 12:08:36 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/171111-snc-en-rpi3/</guid>
      <description>&lt;p&gt;En la entrada anterior &lt;a href=&#34;https://onthedock.github.io/post/171104-apiserver-detenido/&#34;&gt;API server detenido: The connection to the server was refused&lt;/a&gt; encontré problemas con la tarjeta microSD que sirve de almacenamiento para el nodo master del clúster de Kubernetes.&lt;/p&gt;

&lt;p&gt;La solución al problema pasaba por realizar un análisis de la tarjeta para repararla. Sin embargo, al intentarlo, no ha habido manera de formatear y reinstalar HypriotOS sobre la tarjeta.&lt;/p&gt;

&lt;p&gt;El fallo de la tarjeta de memoria ha sido la gota final que me ha hecho abandonar el clúster multinodo en las Raspberry Pi (de momento). Así que he decidido instalar un clúster de un solo nodo en una de las Raspberri Pi 3.&lt;/p&gt;

&lt;p&gt;En este artículo sigo las instrucciones oficiales para construir un clúster de Kubernetes usando &lt;em&gt;kubeadm&lt;/em&gt;: &lt;a href=&#34;https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/&#34;&gt;Using kubeadm to Create a Cluster&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gogs - Cómo crear tu propio servicio de hospedaje de repositorios Git</title>
      <link>https://onthedock.github.io/post/171106-gogs-como-crear-tu-propio-servicio-de-hospedaje-de-repos-git/</link>
      <pubDate>Mon, 06 Nov 2017 22:11:26 +0100</pubDate>
      
      <guid>https://onthedock.github.io/post/171106-gogs-como-crear-tu-propio-servicio-de-hospedaje-de-repos-git/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://gogs.io/&#34;&gt;Gogs&lt;/a&gt; es la manera más sencilla, rápida y menos dolorosa de poner en marcha tu propio servicio de Git en tu infraestructura, tu propio &lt;em&gt;Github&lt;/em&gt;, para entendernos. Gogs proporciona un entorno web que permite gestionar los respositorios Git desde el navegador, el acceso que tienen los usuarios, gestionar &lt;em&gt;issues&lt;/em&gt; y &lt;em&gt;pull requests&lt;/em&gt; e incluso crear un wiki para documentar el proyecto.&lt;/p&gt;

&lt;p&gt;Es 100% código abierto, está escrito en Go y es &lt;em&gt;muy ligero&lt;/em&gt; (incluso puede correr en una Raspberry Pi).&lt;/p&gt;

&lt;p&gt;En este artículo te indico cómo confirgurarlo lanzándolo desde un contenedor sobre Docker.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Trucos para para línea de comandos</title>
      <link>https://onthedock.github.io/post/171002-trucos-para-la-linea-de-comandos/</link>
      <pubDate>Mon, 02 Oct 2017 20:44:00 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/171002-trucos-para-la-linea-de-comandos/</guid>
      <description>&lt;p&gt;Últimamente paso mucho tiempo en la línea de comando, por lo que aprender algunos &lt;em&gt;trucos&lt;/em&gt; en forma de combinaciones de teclas, etc, que me ayuden a ser mucho más ágil.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cómo crear una imagen con Caddy y PHP</title>
      <link>https://onthedock.github.io/post/170930-como-crear-una-imagen-con-caddy-y-php/</link>
      <pubDate>Sat, 30 Sep 2017 21:36:58 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170930-como-crear-una-imagen-con-caddy-y-php/</guid>
      <description>&lt;p&gt;En las entradas anteriores he descrito los problemas -tanto conceptuales como técnicos- que he encontrado al intentar llevar Dokuwiki a un contenedor.&lt;/p&gt;

&lt;p&gt;En este artículo explico los pasos a seguir para construir una imagen con &lt;a href=&#34;https://caddyserver.com/&#34;&gt;Caddy server&lt;/a&gt; y PHP, de manera que puedas servir tus aplicaciones PHP usando contenedores.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nuevos problemas al construir la imagen con Caddy y PHP, ahora para Raspberry Pi</title>
      <link>https://onthedock.github.io/post/170930-nuevos-problemas-para-construir-la-imagen-para-rpi/</link>
      <pubDate>Sat, 30 Sep 2017 17:30:45 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170930-nuevos-problemas-para-construir-la-imagen-para-rpi/</guid>
      <description>&lt;p&gt;En la entrada anterior &lt;a href=&#34;https://onthedock.github.io/post/170924-dokuwiki_en_un_contenedor_notas/&#34;&gt;Dokuwiki en un contendor&lt;/a&gt; dejaba constancia de los problemas que encontré creando una imagen para ejecutar Dokuwiki en un contenedor.&lt;/p&gt;

&lt;p&gt;Al final de la entrada indicaba que la creación de la misma imagen, pero para ARM sería tan sencillo como cambiar la imagen base. &lt;strong&gt;Pues no.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Como he tenido que revisar a fondo los pasos que seguí -en particular para configurar la carpeta desde donde Caddy publica los ficheros-, he introducido algunos cambios que simplifiquen y mejoren el uso de la imagen.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dokuwiki en un contenedor: notas sobre el proceso</title>
      <link>https://onthedock.github.io/post/170924-dokuwiki_en_un_contenedor_notas/</link>
      <pubDate>Sun, 24 Sep 2017 22:43:01 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170924-dokuwiki_en_un_contenedor_notas/</guid>
      <description>&lt;p&gt;Antes de convertir todas las Raspberry Pi de casa en &lt;em&gt;hosts&lt;/em&gt; de Docker, usaba la Raspberry Pi B+ como wiki casero. En él documentaba todo lo que iba aprendiendo sobre las diferentes tecnologías de mi día a día.&lt;/p&gt;

&lt;p&gt;Hoy he vuelto a instalar Dokuwiki, aunque esta vez usando un contenedor. En este artículo comento algunos de los puntos relevantes que han surgido durante el proceso.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cómo arrancar contenedores durante el inicio del sistema</title>
      <link>https://onthedock.github.io/post/170920-autoarranque-de-contenedores/</link>
      <pubDate>Wed, 20 Sep 2017 22:09:46 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170920-autoarranque-de-contenedores/</guid>
      <description>&lt;p&gt;Una de las desventajas de Docker respecto a Kubernetes, es que en caso de fallo del nodo donde corren los contenedores, éstos no arrancan automáticamente cuando el nodo se recupera. El caso más sencillo es cuando hay que apagar/reiniciar el nodo por algún motivo.&lt;/p&gt;

&lt;p&gt;En mi caso, el &lt;em&gt;motivo de fallo&lt;/em&gt; del nodo ha sido que lo he apagado durante las vacaciones ;)&lt;/p&gt;

&lt;p&gt;De todas formas, he decidido configurar los contenedores de forma que se inicien automáticamente con el arranque del sistema. En este artículo te explico cómo.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dnsmasq en Docker</title>
      <link>https://onthedock.github.io/post/170827-dnsmasq-en-docker/</link>
      <pubDate>Sun, 27 Aug 2017 20:48:02 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170827-dnsmasq-en-docker/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.thekelleys.org.uk/dnsmasq/doc.html&#34;&gt;&lt;strong&gt;dnsmasq&lt;/strong&gt;&lt;/a&gt; es un &lt;a href=&#34;https://es.wikipedia.org/wiki/Servidor_de_nombres&#34;&gt;servidor de nombres de dominio (DNS)&lt;/a&gt; ligero y sencillo.&lt;/p&gt;

&lt;p&gt;En esta entrada indico cómo ejecutar &lt;strong&gt;dnsmasq&lt;/strong&gt; en un contenedor usando Docker.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Probando Minio</title>
      <link>https://onthedock.github.io/post/170820-probando-minio/</link>
      <pubDate>Sun, 20 Aug 2017 21:28:20 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170820-probando-minio/</guid>
      <description>&lt;p&gt;Minio proporciona un servidor de almacenamiento distribuido compatible con el API de Amazon AWS S3.&lt;/p&gt;

&lt;p&gt;En esta entrada comento las pruebas que he estado realizando usando Minio tanto el cliente como el servidor en contenedores Docker.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Play With Kubernetes</title>
      <link>https://onthedock.github.io/post/170818-play-with-k8s/</link>
      <pubDate>Fri, 18 Aug 2017 20:25:31 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170818-play-with-k8s/</guid>
      <description>&lt;p&gt;Hace unas semanas descubrí el sitio &lt;a href=&#34;http://play-with-k8s.com&#34;&gt;PWK&lt;/a&gt;, &lt;strong&gt;Play with Kubernetes&lt;/strong&gt;. Su creador, &lt;a href=&#34;https://medium.com/@marcosnils&#34;&gt;Marcos Nils&lt;/a&gt; explica en &lt;a href=&#34;https://medium.com/@marcosnils/introducing-pwk-play-with-k8s-159fcfeb787b&#34;&gt;Introducing PWK (Play with K8s)&lt;/a&gt; que tenía ganas de extender la plataforma PWD (Play with Docker) a Kubernetes.&lt;/p&gt;

&lt;p&gt;El sitio PWK permite montar clústers de Kubernetes y lanzar servicios replicados de manera rápida y sencilla. Se trata de un entorno donde realizar pruebas y &lt;em&gt;jugar&lt;/em&gt; durante cuatro horas con varias instancias de Docker sobre las que podemos usar &lt;code&gt;kubeadm&lt;/code&gt; para instalar y configurar Kubernetes, creando un clúster en menos de un minuto.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Troubleshooting: Creación de pods del tutorial &#39;StatefulSet Basics&#39;</title>
      <link>https://onthedock.github.io/post/170818-troubleshooting-creacion-de-pods-del-tutorial-statefulset-basics/</link>
      <pubDate>Fri, 18 Aug 2017 17:45:03 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170818-troubleshooting-creacion-de-pods-del-tutorial-statefulset-basics/</guid>
      <description>&lt;p&gt;Esta entrada es un registro de las diferentes acciones que realicé para conseguir que los &lt;em&gt;pods&lt;/em&gt; asociados al &lt;em&gt;StatefulSet&lt;/em&gt; del tutorial &lt;a href=&#34;https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/&#34;&gt;StatefulSet Basics&lt;/a&gt; se crearan correctamente.&lt;/p&gt;

&lt;p&gt;Lo publico como lo que es, un &lt;em&gt;log&lt;/em&gt; de todos los pasos que fui dando, en modo &lt;em&gt;ensayo y error&lt;/em&gt;, hasta que conseguí que los &lt;em&gt;pods&lt;/em&gt; se crearan con éxito. Mi intención al publicarlo no es tanto que sirva como referencia sino como archivo. Y si alguien se encuentra con un problema similar, que pueda consultar los pasos que he dado durante el &lt;em&gt;troubleshooting&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Como indicaba en el artículo anterior, quiero publicar un tutorial paso a paso con el proceso correcto para provisionar los &lt;em&gt;PersistentVolumes&lt;/em&gt; necesarios para el tutorial &lt;a href=&#34;https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/&#34;&gt;StatefulSet Basics&lt;/a&gt; del sitio de Kubernetes.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Almacenamiento en Kubernetes: problema abierto</title>
      <link>https://onthedock.github.io/post/170817-almacenamiento-en-k8s-problema-abierto/</link>
      <pubDate>Thu, 17 Aug 2017 17:11:05 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170817-almacenamiento-en-k8s-problema-abierto/</guid>
      <description>&lt;p&gt;Leía el otro día que desde el principio la tendencia hacia los microservicios estaba pensada para las aplicaciones &lt;em&gt;stateless&lt;/em&gt;, es decir, sin &amp;ldquo;memoria&amp;rdquo; del estado, donde cada interacción con la aplicación se considera independiente del resto. El ejemplo clásico de aplicación &lt;em&gt;stateless&lt;/em&gt; es un servidor web. Así que no es de extrañar que la aplicación que siempre aparece en todo tutorial que se precie de Docker/Kubernetes  es Nginx.&lt;/p&gt;

&lt;p&gt;En el mundo real, sin embargo, la mayoría de aplicaciones requieren algún tipo de persistencia, incluso las webs más sencillas (así surgieron las &lt;em&gt;cookies&lt;/em&gt;). Pero por el momento, Kubernetes y el almacenamiento son dos conceptos que no combinan demasiado bien, aunque funcionan perfectamente por separado.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mi primera aplicación en Kubernetes</title>
      <link>https://onthedock.github.io/post/170716-mi-primera-app-en-kubernetes/</link>
      <pubDate>Sun, 16 Jul 2017 19:38:17 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170716-mi-primera-app-en-kubernetes/</guid>
      <description>&lt;p&gt;Después de &lt;a href=&#34;https://onthedock.github.io/post/170702-crear-un-cluster-de-un-solo-nodo/&#34;&gt;crear un cluster de un solo nodo&lt;/a&gt;, en esta entrada explico los pasos para publicar una aplicación en el clúster.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Crear un cluster de un solo nodo</title>
      <link>https://onthedock.github.io/post/170702-crear-un-cluster-de-un-solo-nodo/</link>
      <pubDate>Sun, 02 Jul 2017 23:14:22 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170702-crear-un-cluster-de-un-solo-nodo/</guid>
      <description>&lt;p&gt;Para tener un clúster de desarrollo con la versatilidad de poder hacer y deshacer cambios (usando los &lt;em&gt;snapshots&lt;/em&gt; de una máquina virtual), lo más sencillo es disponer de un clúster de Kubernetes de un solo nodo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Revisión de conceptos</title>
      <link>https://onthedock.github.io/post/170528-revision-de-conceptos/</link>
      <pubDate>Sun, 28 May 2017 07:59:31 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170528-revision-de-conceptos/</guid>
      <description>&lt;p&gt;Después de estabilizar el clúster, el siguiente paso es poner en marcha aplicaciones. Pero ¿qué es exactamente lo que hay que desplegar?: ¿&lt;em&gt;pods&lt;/em&gt;?, ¿&lt;em&gt;replication controllers&lt;/em&gt;?, ¿&lt;em&gt;deployments&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;Muchos artículos empiezan creando el fichero YAML para un &lt;em&gt;pod&lt;/em&gt;, después construyen el &lt;em&gt;replication controller&lt;/em&gt;, etc&amp;hellip; Sin embargo, revisando la documentación oficial, crear &lt;em&gt;pods&lt;/em&gt; directamente en Kubernetes no tiene mucho sentido.&lt;/p&gt;

&lt;p&gt;En este artículo intento determinar qué objetos son los que deben crearse en un clúster Kubernetes.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Introduccion a YAML</title>
      <link>https://onthedock.github.io/post/170525-introduccion-a-yaml/</link>
      <pubDate>Thu, 25 May 2017 18:34:11 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170525-introduccion-a-yaml/</guid>
      <description>&lt;p&gt;YAML es el lenguaje en el que se definen los &lt;em&gt;pods&lt;/em&gt;, los &lt;em&gt;deployments&lt;/em&gt; y demás estructuras en Kubernetes. Todos los artículos que he leído sobre cómo crear un fichero de definición del &lt;em&gt;pod&lt;/em&gt; (&lt;em&gt;deployment&lt;/em&gt;, etc) se centran en el &lt;strong&gt;contenido&lt;/strong&gt; del fichero.&lt;/p&gt;

&lt;p&gt;Pero en mi caso, echaba de menos una explicación de &lt;strong&gt;cómo&lt;/strong&gt; se crea el fichero, qué reglas se siguen a la hora de &lt;em&gt;describir&lt;/em&gt; la configuración en formato YAML.&lt;/p&gt;

&lt;p&gt;Afortunadamente el lenguaje YAML es muy sencillo y basta con conocer un par de estructuras para crear los ficheros de configuración de Kubernetes.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Vagrant: primeras impresiones</title>
      <link>https://onthedock.github.io/post/170521-vagrant-primeras-impresiones/</link>
      <pubDate>Sun, 21 May 2017 09:26:45 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170521-vagrant-primeras-impresiones/</guid>
      <description>&lt;p&gt;He estado probando &lt;a href=&#34;https://www.vagrantup.com&#34;&gt;Vagrant&lt;/a&gt; para automatizar la creación de máquinas virtuales en las que probar Docker, etc.&lt;/p&gt;

&lt;p&gt;En este artículo comento mis primeras impresiones con Vagrant.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Normas para estructurar ficheros implicados en la creación de contenedores</title>
      <link>https://onthedock.github.io/post/170520-normas-para-estructurar-ficheros-implicados-en-la-creacion-de-contenedores/</link>
      <pubDate>Sat, 20 May 2017 19:59:44 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170520-normas-para-estructurar-ficheros-implicados-en-la-creacion-de-contenedores/</guid>
      <description>&lt;p&gt;El proceso desde la creación a la ejecución del contenedor se puede separar en varias fases:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Creación de la imagen (mediante la redacción de un fichero &lt;code&gt;Dockerfile&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Construcción de la imagen&lt;/li&gt;
&lt;li&gt;Ejecución del contenedores&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Para tener los diferentes ficheros implicados en el proceso organizados de forma homogénea, me he autoimpuesto las siguientes reglas a la hora de estructurar los repositorios.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Habilita el acceso remoto vía API a Docker</title>
      <link>https://onthedock.github.io/post/170506-habilita-el-acceso-remoto-via-api-a-docker/</link>
      <pubDate>Sat, 06 May 2017 15:23:36 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170506-habilita-el-acceso-remoto-via-api-a-docker/</guid>
      <description>&lt;p&gt;Portainer permite gestionar &lt;em&gt;endpoints&lt;/em&gt; remotos para Docker (y Docker Swarm) mediante el API REST de Docker Engine. El problema es que el API está desactivado por defecto.&lt;/p&gt;

&lt;p&gt;A continuación indico cómo activar y verificar el acceso remoto al API de Docker Engine.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tags, categorias y organización en Hugo</title>
      <link>https://onthedock.github.io/post/170506-tags-categorias-archetypes-en-hugo/</link>
      <pubDate>Sat, 06 May 2017 06:23:50 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170506-tags-categorias-archetypes-en-hugo/</guid>
      <description>&lt;p&gt;A medida que aumenta el número de artículos me he dado cuenta de que es necesario tener algún conjunto de reglas para organizar los ficheros que componen el blog.&lt;/p&gt;

&lt;p&gt;El problema no está en los ficheros de Hugo, sino en los ficheros generados por mi: artículos, imágenes, etc.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Publica en Github Pages</title>
      <link>https://onthedock.github.io/post/170403-publica-en-github-pages/</link>
      <pubDate>Mon, 03 Apr 2017 22:38:35 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170403-publica-en-github-pages/</guid>
      <description>&lt;p&gt;Cómo publicar el sitio web generado con Hugo en GitHub Pages.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Agregar nueva entrada con Hugo</title>
      <link>https://onthedock.github.io/post/170401-agregar-nueva-entrada-con-hugo/</link>
      <pubDate>Sat, 01 Apr 2017 22:36:46 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170401-agregar-nueva-entrada-con-hugo/</guid>
      <description>&lt;p&gt;Cómo publicar una entrada usando Hugo, el generador de sitios estáticos, desde la creación del &lt;em&gt;site&lt;/em&gt; hasta la subida de los ficheros en el servidor web.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>De Blogger a Hugo</title>
      <link>https://onthedock.github.io/post/170401-de-blogger-a-hugo/</link>
      <pubDate>Sat, 01 Apr 2017 18:10:12 +0200</pubDate>
      
      <guid>https://onthedock.github.io/post/170401-de-blogger-a-hugo/</guid>
      <description>&lt;p&gt;Porqué me estoy planteando dejar Blogger y pasar a un sitio estático gracias a Hugo.&lt;/p&gt;

&lt;p&gt;Hugo es un &lt;em&gt;generador de sitios estáticos&lt;/em&gt; a partir de ficheros en formato &lt;em&gt;markdown&lt;/em&gt;. Hugo aplica una plantilla al contenido de los ficheros en formato &lt;em&gt;markdon&lt;/em&gt; y crea los ficheros HTML.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>